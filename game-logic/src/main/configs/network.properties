# Rmi connection host.
network.rmi.host = 0.0.0.0

# Rmi connection port.
network.rmi.port = 9001

# Rmi connection password.
network.rmi.password = 1234

# Server version supported
# NA-EU: 4635
network.server.version = 4635

# Client support european.
network.encrypt.packets = true

# Host for server binding.
# Default: 0.0.0.0
network.host = 0.0.0.0

# Port for server binding.
# Default: 8888
network.port = 8886

# Show debug messages.
# Default: false
network.debug = false

# Packet executing mode.
# DIRECT - The worst. Income packets are directly executed after receiving and decrypting. As packets here implemented terribly, it not only increases latency, but decrease overall performance significant.
# OFFLOAD - Offloads execution to a ThreadPool. Good option with POOLED IOExec mode. Increases throughput but also may increase context switch count.
# Default: OFFLOAD
network.packet.exec.mode = OFFLOAD

# Receive buffer size.
# Default: 32768
network.recv.buffer.size = 32768

# Send buffer size.
# Default: 65536
network.send.buffer.size = 65536

# NetworkThread socket backlog size.
# See: http://www.linuxjournal.com/files/linuxjournal.com/linuxjournal/articles/023/2333/2333s2.html
# Default: 50
network.server.socket.backlog = 50

# Client socket options.
# SO_SNDBUF - the size of the socket's send buffer. On most systems this the size of a kernel buffer so be careful! See RFC1323.
# SO_RCVBUF - the size of the socket's receive buffer. On most systems this the size of a kernel buffer so be careful! See RFC1323.
# TCP_NODELAY - The Nagle algorithm. Enabling it increases throughput but also increases latency. See RFC1122.
# Default: SO_SNDBUF(8192);SO_RCVBUF(8192);TCP_NODELAY(true)
network.client.socket.options = SO_SNDBUF(8192);SO_RCVBUF(8192);TCP_NODELAY(true)

# NetworkThread socket options.
# SO_REUSEADDR - if true, prevents socket from usage until all opened sockets are really closed. See RFC793.
# Default: SO_REUSEADDR(true);SO_RCVBUF(4096)
network.server.socket.options = SO_REUSEADDR(false);SO_RCVBUF(4096)

# IO Network thread execution mode.
# POOLED - All IO operations are executed in a special thread IO execution pool
# FIXED - All IO operations execution is spread across fixed number of treads
# Default: POOLED
network.io.execution.mode = POOLED

# Number of IO Network threads.
# Default: -1 (Processor count)
network.io.execution.thread.num = -1

# Income packet header size.
# Default: 3
network.income.packet.header.size = 3

# Max income packet size.
# Default: 16384
network.max.income.packet.size = 16384

# Outcome packet header size.
# Default: 3
network.outcome.packet.header.size = 3

# Max outcome packet size.
# Default: 16384
network.max.outcome.packet.size = 16384

